# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UOOYKDSSB1z0hGue7yK6eEDAhLfSPoZ_
"""

import google.generativeai as genai

class GeminiChat:
    def __init__(self, api_key, df_columns):
        genai.configure(api_key=api_key)
        self.model = genai.GenerativeModel('gemini-2.0-flash')
        self.chat = self.model.start_chat(history=[
            {
                "role": "user",
                "parts": [f"Tienes un DataFrame de pandas llamado df. Estas son las columnas reales que contiene: {', '.join(df_columns)}. No traduzcas ni cambies ning√∫n nombre de columna. Usa los nombres tal como est√°n."]
            },
            {
                "role": "model",
                "parts": ["Entendido. Usar√© los nombres de columna exactamente como los proporcionaste."]
            }
        ])
        self.history = [
            "üü¢ Asistente activo. Pregunta lo que quieras sobre tu DataFrame.",
            "‚úèÔ∏è Escribe 'salir' para finalizar."
        ]

    def send_question(self, question, df_columns):
        prompt = f"""
Tienes un DataFrame de pandas llamado `df` cargado en memoria.
Estas son las columnas reales: {', '.join(df_columns)}.
NO CAMBIES los nombres de las columnas.

Responde a esta pregunta escribiendo solamente el c√≥digo Python que da la respuesta.

Para preguntas sobre productos, como 'urea', usa b√∫squedas flexibles que ignoren may√∫sculas/min√∫sculas (por ejemplo, `.str.contains('urea', case=False, na=False)`) y consideren variaciones del texto (por ejemplo, 'Urea 46%', 'urea granulada').

Si la pregunta requiere una gr√°fica, genera la gr√°fica usando `matplotlib` y mu√©strala con `st.pyplot()`.

Pregunta:
{question}
"""
        response = self.chat.send_message(prompt)
        return response.text.strip("```python\n").strip("```").strip()

    def reset_chat(self):
        self.chat = None
        self.history.append("üëã Adios.")
